/*------------------------------------*\
    $SETTINGS
\*------------------------------------*/

/// Build
// $build: 'dev';
$build: 'prod';

/// Debug
$layout-debug: false;
$vertical-rhythm: false;

/// Default colors library
@import "colors";


/// Container max-width
/// @type Length
$max-width: 800px;


/// Golden Ratio -> 1.61803398875
/// @type Number
$golden-ratio: 2;


/// Base font size
/// @type Number
$base-font-size:    13px!default;

/// Base line height - related to golden ratio
/// @type Number
$base-line-height:  $base-font-size * $golden-ratio!default;

/// Ratio of base line height for vertical rhythm
/// @type Number
$line-height-ratio: $base-line-height / $base-font-size;

/// Base space unit for margin, padding and etc. This is set Magic Number
/// @type Number
$base-spacing-unit: $base-line-height!default;
$half-spacing-unit: $base-spacing-unit / 2!default;
$double-spacing-unit: $base-spacing-unit * 2!default;

/// Regular font stack
/// @type List
$text-font-stack: "Arial", "Tahoma", sans-serif;

/// Farsi regular web-font stack
/// @type List
$farsi-text-font-stack: "IranSansLight", $text-font-stack;

/// Code font stack
/// @type List
$code-font-stack: "Source Code Pro", "Courier New", monospace;

/// Opposite theme name
/// @type String
$theme: "dark";

/// Document Body background color
/// @type Color
$body-bgc: #F9F9F9;

/// Document Text color
/// @type Color
$doc-text-color: $zoghali;

/// Document Body background color - dark theme
/// @type Color
$body-bgc--dark: $zoghali;

/// Document Text color - dark theme
/// @type Color
$doc-text-color--dark: #ddd;


/// Code background - dark theme
/// @type Color
$code-bgc: darken($body-bgc, 3%);

/// Code background - dark theme
/// @type Color
$code-bgc--dark: darken($body-bgc--dark, 3%);


/// Breakpoints
/// @type Map
/// @prop {String} key - Breakpoint name
/// @prop {Map} value - Breakpoint value
$breakpoints: (
  'mobile-landscape': (min-width: 480px),
  'tablet': (min-width: 768px),
  'medium': (min-width: 900px),
  'large': (min-width: 1024px),
  'wide': (min-width: 1280px)
);

/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels
$mq-breakpoints: (
    mobile:  320px,
    tablet:  768px,
    medium: 900px,
    desktop: 1024px,
    wide:    1200px,

    // Tweakpoints
    desktopAd: 810px,
    mobileLandscape: 480px
);

// Define the breakpoint from the $mq-breakpoints list that should
// be used as the target width when outputting a static stylesheet
// (i.e. when $mq-responsive is set to 'false').
$mq-static-breakpoint: desktop;

// If you want to display the currently active breakpoint in the top
// right corner of your site during development, add the breakpoints
// to this list, ordered by width, e.g. (mobile, tablet, desktop).

// $mq-show-breakpoints: (mobile, mobileLandscape, tablet, desktop, wide);


/*------------------------------------*\
    $FONT-SIZES
\*------------------------------------*/
/**
 * Font-sizes (in pixels). Refer to relevant sections for their implementations.
 */

$h1-size:           30px!default; // .alpha
$h2-size:           26px!default; // .beta
$h3-size:           22px!default; // .gamma
$h4-size:           18px!default; // .delta
$h5-size:           14px!default; // .epsilon
$h6-size:           10px!default; // .zeta

$milli-size:        13px!default;
$micro-size:      11px!default;
